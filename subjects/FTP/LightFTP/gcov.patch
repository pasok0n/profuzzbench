diff --git a/Source/ftpserv.c b/Source/ftpserv.c
index 0d51a93..ccf7364 100644
--- a/Source/ftpserv.c
+++ b/Source/ftpserv.c
@@ -1932,6 +1932,10 @@ void *ftpmain(void *p)
             sendstring_plaintext(clientsocket, NOSLOTS);
             close(clientsocket);
         }
+        
+        //Terminate the main thread when the child thread terminates
+		pthread_join(th, NULL);
+        break;
     }
 
     free(scb);
diff --git a/Source/main.c b/Source/main.c
index cc67a9a..933b34c 100644
--- a/Source/main.c
+++ b/Source/main.c
@@ -11,6 +11,8 @@
 #include "ftpserv.h"
 #include "cfgparse.h"
 #include "x_malloc.h"
+#include <signal.h>
+#include <unistd.h>
 
 FTP_CONFIG   g_cfg;
 int          g_log = -1;
@@ -25,6 +27,11 @@ gnutls_datum_t                      session_keys_storage = {0};
 
 void ftp_tls_init();
 void ftp_tls_cleanup();
+void sig_handler(int signo)
+{
+  if (signo == SIGUSR1)
+    exit(0);
+}
 
 /* Program entry point */
 int main(int argc, char *argv[])
@@ -36,6 +43,8 @@ int main(int argc, char *argv[])
 
 	struct in_addr na;
 
+	signal(SIGUSR1, sig_handler);
+
 	if (sizeof (off_t) != 8)
 	{
 		printf("off_t is not 64 bits long");
@@ -65,9 +74,10 @@ int main(int argc, char *argv[])
 		if (config_parse(cfg, CONFIG_SECTION_NAME, "local_mask", textbuf, bufsize))
 			g_cfg.LocalIPMask = inet_addr(textbuf);
 
-		g_cfg.Port = DEFAULT_FTP_PORT;
-		if (config_parse(cfg, CONFIG_SECTION_NAME, "port", textbuf, bufsize))
-			g_cfg.Port = strtoul(textbuf, NULL, 10);
+		//g_cfg.Port = DEFAULT_FTP_PORT;
+		//if (config_parse(cfg, CONFIG_SECTION_NAME, "port", textbuf, bufsize))
+		//	g_cfg.Port = strtoul(textbuf, NULL, 10);
+		g_cfg.Port = strtoul(argv[2], NULL, 10);
 
 		g_cfg.MaxUsers = 1;
 		if (config_parse(cfg, CONFIG_SECTION_NAME, "maxusers", textbuf, bufsize))
@@ -142,10 +152,8 @@ int main(int argc, char *argv[])
 			break;
 		}
 
-		do {
-			c = getc(stdin);
-			sleep(1);
-		} while ((c != 'q') && (c != 'Q'));
+		//Terminate the server when the main thread terminates
+		pthread_join(thid, NULL);
 
 		break;
 	}
